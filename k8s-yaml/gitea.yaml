apiVersion: v1
kind: Namespace
metadata:
  name: gitea
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: gitea
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitea-pvc
  namespace: gitea
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: giteamysql
  namespace: gitea
spec:
  replicas: 1
  selector:
    matchLabels:
      app: giteamysql
  template:
    metadata:
      labels:
        app: giteamysql
    spec:
      containers:
      - image: gitea/gitea:latest
        imagePullPolicy: IfNotPresent
        name: gitea
        resources: {}
        volumeMounts:
        - name: gitea-pvc
          mountPath: /data 
      volumes:
        - name: gitea-pvc
          persistentVolumeClaim:
            claimName: gitea-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: giteamysql-service
  namespace: gitea
  labels:
    app: charts
spec:
  ports:
  - name: http
    port: 3000
    protocol: TCP
    targetPort: 3000 
  selector:
    app: giteamysql
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    kubernetes.io/tls-acme: 'true'
  name: giteamysql-ingress
  namespace: gitea
spec:
  rules:
  - host: github.youdomain.com
    http:
      paths:
      - backend:
          service:
            name: giteamysql-service
            port: 
              name: http
        path: /
        pathType: Prefix
